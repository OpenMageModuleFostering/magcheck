<fieldset class="form-list">
    <?php $_code=$this->getMethodCode() ?>
    <ul id="payment_form_<?php echo $_code ?>" style="display:none">
        <li>
            <div class="input-box">
                <label for="<?php echo $_code ?>_echeck_routing_number"><?php echo $this->__('Bank routing number') ?> <span class="required">*</span></label><br />
                <input id="<?php echo $_code ?>_echeck_routing_number" name="payment[echeck_routing_number]" class="required-entry validate-digits validate-length minimum-length-9 maximum-length-9 routingnumer">
            </div>
        </li>
        <li>
            <div class="input-box">
                <label for="<?php echo $_code ?>_echeck_bank_name"><?php echo $this->__('Bank name') ?> <span class="required">*</span></label><br />
                <input id="<?php echo $_code ?>_echeck_bank_name" name="payment[echeck_bank_name]" class="required-entry validate-length minimum-length-3 maximum-length-100">
            </div>
        </li>
        <li>
            <div class="input-box">
                <label for="<?php echo $_code ?>_echeck_bank_acct_num"><?php echo $this->__('Bank account number') ?> <span class="required">*</span></label><br />
                <input id="<?php echo $_code ?>_echeck_bank_acct_num" name="payment[echeck_bank_acct_num]" class="required-entry validate-accountnumber validate-length minimum-length-5 maximum-length-17">
            </div>
        </li>
        <li>
            <div class="input-box">
                <label for="<?php echo $_code ?>_echeck_account_type"><?php echo $this->__('Account type') ?> <span class="required">*</span></label><br />
                <select id="<?php echo $_code ?>_echeck_account_type" name="payment[echeck_account_type]" class="required-entry">
                    <option value=""><?php echo $this->__('--Please Select--')?></option>
                <?php $_accountType = $this->getInfoData('account_type') ?>
                <?php foreach ($this->getAccountAvailableTypes() as $_typeCode => $_typeName): ?>
                    <option value="<?php echo $_typeCode ?>"<?php if($_typeCode==$_accountType): ?> selected="selected"<?php endif ?>><?php echo $_typeName ?></option>
                <?php endforeach ?>
                </select>
            </div>
        </li>
		
		<li>
            <div class="input-box">
                <label for="<?php echo $_code ?>_echeck_check_number"><?php echo $this->__('Check #') ?> <span class="required">*</span></label><br />
                <input id="<?php echo $_code ?>_echeck_check_number" name="payment[echeck_check_number]" class="required-entry validate-digits validate-length minimum-length-3 maximum-length-6">
            </div>
        </li>		
		
		
        <!-- <li>
            <div class="input-box">
                <label for="<?php echo $_code ?>_echeck_account_name"><?php echo $this->__('Name On Account') ?> <span class="required">*</span></label><br />
                <input id="<?php echo $_code ?>_echeck_account_name" name="payment[echeck_account_name]" class="required-entry">
            </div>
        </li> -->
        <!-- li>
            <div class="input-box">
                <label for="<?php echo $_code ?>_echeck_type"><?php echo $this->__('Echeck type') ?> <span class="required">*</span></label><br />
                <input id="<?php echo $_code ?>_echeck_type" name="payment[echeck_type]" class="required-entry">
            </div>
        </li-->
    </ul>
</fieldset>

<script type='text/javascript'>

//< ![CDATA[
	Validation.add('validate-accountnumber', 'Account Number can only contain digits and dashes at the middle.', function(v) {
        var n = v.replace("-","0");
		n = n.replace("+","*");
		n = n.replace(" ","*");
		
		var isdigit = !isNaN(n);		
		ret = true;
		if(v.indexOf("-") == 0 || v.indexOf("-") == (v.length-1) || (v.length - v.replace("-","").length) > 1)
			ret = false;
		return ret && isdigit;
   });
   
   Validation.add('routingnumer', 'Invalid Routing Number.', function(v) {
        
	if (v.length ==9)		
	{
	   d = v.split("");
	   if ((3*(Number(d[0])+Number(d[3])+Number(d[6]))+7*(Number(d[1])+Number(d[4])+Number(d[7]))+(Number(d[2])+Number(d[5])+Number(d[8])))%10==0)
		   isvalid = true;
	   else
		   isvalid = false;
		   
		if(isvalid)
		{
			var pattern =new RegExp("^((0\\d)|(1[0-2])|(2[1-9])|(3[0-2])|(80))\\d{2}[\\d|-]\\d{4}$");
			isvalid = v.match(pattern);
		}
	}
	return isvalid;
   });
		
   
//]]>
</script>
